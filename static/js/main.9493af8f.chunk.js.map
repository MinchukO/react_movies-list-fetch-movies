{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/goods.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onFindFilm","useState","setTitle","film","setFilm","error","setError","findHandlerMovie","nameFilm","fetch","then","response","ok","json","Error","getConnect","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","data","setMovies","some","item","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9493af8f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { getConnect } from '../../api/goods';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ onFindFilm }) => {\n  const [title, setTitle] = useState('');\n  const [film, setFilm] = useState('');\n  const [error, setError] = useState(false);\n\n  const findHandlerMovie = (nameFilm) => {\n    if (nameFilm === '') {\n      return;\n    }\n\n    getConnect(nameFilm).then((response) => {\n      if (response.Response === 'False') {\n        setFilm('');\n        setError(true);\n\n        return;\n      }\n\n      setFilm({\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}/`,\n        imdbId: response.imdbID,\n      });\n\n      setTitle('');\n      setError(false);\n    });\n  };\n\n  const addFilmHandler = () => {\n    if (!film) {\n      return;\n    }\n\n    onFindFilm(film);\n    setFilm('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          onFindFilm(film);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findHandlerMovie(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addFilmHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {film && <MovieCard {...film} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onFindFilm: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=77e39eb1&t=';\n\nexport const getConnect = title => (\n  fetch(`${API_URL}${title}`)\n    .then((response) => {\n      if (!response.ok) {\n        return new Error('Can not load');\n      }\n\n      return response.json();\n    })\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addFilm = (film) => {\n    const addFilmToList = movies.some(\n      item => item.imdbId === film.imdbId,\n    );\n\n    if (!addFilmToList) {\n      setMovies(state => [...state, film]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onFindFilm={addFilm} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}